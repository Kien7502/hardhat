{
	"id": "5180f02dfc76e81ad45d8c2c4bb3d76c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SafeMath.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract MyContract {\r\n    using SafeMath for uint256;\r\n    \r\n    function foo() external pure {\r\n        uint256 number = 1;\r\n        number.add(1);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SafeMath.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":191:350  contract MyContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":191:350  contract MyContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SafeMath.sol\":257:347  function foo() external pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/SafeMath.sol\":297:311  uint256 number */\n      0x00\n        /* \"contracts/SafeMath.sol\":314:315  1 */\n      0x01\n        /* \"contracts/SafeMath.sol\":297:315  uint256 number = 1 */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":326:339  number.add(1) */\n      tag_7\n        /* \"contracts/SafeMath.sol\":337:338  1 */\n      0x01\n        /* \"contracts/SafeMath.sol\":326:332  number */\n      dup3\n        /* \"contracts/SafeMath.sol\":326:336  number.add */\n      tag_8\n      swap1\n        /* \"contracts/SafeMath.sol\":326:339  number.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_7:\n      pop\n        /* \"contracts/SafeMath.sol\":286:347  {... */\n      pop\n        /* \"contracts/SafeMath.sol\":257:347  function foo() external pure {... */\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":57:184  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_8:\n        /* \"contracts/SafeMath.sol\":115:124  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":141:142  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":137:138  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":137:142  a + b */\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/SafeMath.sol\":133:142  c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":161:162  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":156:157  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":156:162  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":149:163  assert(c >= a) */\n      tag_12\n      jumpi\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n    tag_12:\n        /* \"contracts/SafeMath.sol\":57:184  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_15:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_16:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_11:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_21\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_15\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_22\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_15\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_24\n      tag_16\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":424:460   */\n    tag_23:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:653   */\n    tag_14:\n        /* \"#utility.yul\":521:598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":518:519   */\n      0x00\n        /* \"#utility.yul\":511:599   */\n      mstore\n        /* \"#utility.yul\":618:622   */\n      0x01\n        /* \"#utility.yul\":615:616   */\n      0x04\n        /* \"#utility.yul\":608:623   */\n      mstore\n        /* \"#utility.yul\":642:646   */\n      0x24\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":632:647   */\n      revert\n\n    auxdata: 0xa26469706673582212204b3f668c2adb09b669522a5711e3078de66089075e4143e5b88324e15eaa2a0964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610151806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b60006001905061005460018261005890919063ffffffff16565b5050565b6000818361006691906100b8565b905082811015610079576100786100ec565b5b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006100c38261007f565b91506100ce8361007f565b92508282019050808211156100e6576100e5610089565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204b3f668c2adb09b669522a5711e3078de66089075e4143e5b88324e15eaa2a0964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH2 0x54 PUSH1 0x1 DUP3 PUSH2 0x58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0xEC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC3 DUP3 PUSH2 0x7F JUMP JUMPDEST SWAP2 POP PUSH2 0xCE DUP4 PUSH2 0x7F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE6 JUMPI PUSH2 0xE5 PUSH2 0x89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCODEHASH PUSH7 0x8C2ADB09B66952 0x2A JUMPI GT 0xE3 SMOD DUP14 0xE6 PUSH1 0x89 SMOD 0x5E COINBASE NUMBER 0xE5 0xB8 DUP4 0x24 0xE1 0x5E 0xAA 0x2A MULMOD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "191:159:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_25": {
									"entryPoint": 88,
									"id": 25,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@foo_43": {
									"entryPoint": 58,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:656:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:10:1"
															},
															"nodeType": "YulIf",
															"src": "424:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "316:3:1",
														"type": ""
													}
												],
												"src": "276:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "521:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "511:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "618:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "608:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "639:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "642:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "632:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "473:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b60006001905061005460018261005890919063ffffffff16565b5050565b6000818361006691906100b8565b905082811015610079576100786100ec565b5b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006100c38261007f565b91506100ce8361007f565b92508282019050808211156100e6576100e5610089565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204b3f668c2adb09b669522a5711e3078de66089075e4143e5b88324e15eaa2a0964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH2 0x54 PUSH1 0x1 DUP3 PUSH2 0x58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0xEC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC3 DUP3 PUSH2 0x7F JUMP JUMPDEST SWAP2 POP PUSH2 0xCE DUP4 PUSH2 0x7F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE6 JUMPI PUSH2 0xE5 PUSH2 0x89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCODEHASH PUSH7 0x8C2ADB09B66952 0x2A JUMPI GT 0xE3 SMOD DUP14 0xE6 PUSH1 0x89 SMOD 0x5E COINBASE NUMBER 0xE5 0xB8 DUP4 0x24 0xE1 0x5E 0xAA 0x2A MULMOD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "191:159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:90;;;:::i;:::-;;;297:14;314:1;297:18;;326:13;337:1;326:6;:10;;:13;;;;:::i;:::-;;286:61;257:90::o;57:127::-;115:9;141:1;137;:5;;;;:::i;:::-;133:9;;161:1;156;:6;;149:14;;;;:::i;:::-;;57:127;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:180::-;521:77;518:1;511:88;618:4;615:1;608:15;642:4;639:1;632:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67400",
								"executionCost": "117",
								"totalCost": "67517"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 191,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 350,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b3f668c2adb09b669522a5711e3078de66089075e4143e5b88324e15eaa2a0964736f6c63430008120033",
									".code": [
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 326,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 326,
											"end": 339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 137,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 137,
											"end": 142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 137,
											"end": 142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 142,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 137,
											"end": 142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 149,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 149,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 163,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 163,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 473,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 473,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 622,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 647,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"MyContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x68e8208b8f195d08b066a0f31475b4d94073d1f6e36556ea7822f0875cba4fc7\",\"urls\":[\"bzz-raw://6b1a14887d76d1fbb306c7b1d019ca42cf64b5a6fd05a1f1be57557e5db40ff6\",\"dweb:/ipfs/Qmcs4q33TSkM2XETvRoq5vLXCFeXVBw3mbBxGz2rtpY6XC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":35:187  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":35:187  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220370d59cc2d12bf7e6594153b835c7fe4b9de8b8833b941fdefd1c63181ec207964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220370d59cc2d12bf7e6594153b835c7fe4b9de8b8833b941fdefd1c63181ec207964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xD MSIZE 0xCC 0x2D SLT 0xBF PUSH31 0x6594153B835C7FE4B9DE8B8833B941FDEFD1C63181EC207964736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "35:152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220370d59cc2d12bf7e6594153b835c7fe4b9de8b8833b941fdefd1c63181ec207964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xD MSIZE 0xCC 0x2D SLT 0xBF PUSH31 0x6594153B835C7FE4B9DE8B8833B941FDEFD1C63181EC207964736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "35:152:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35,
									"end": 187,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220370d59cc2d12bf7e6594153b835c7fe4b9de8b8833b941fdefd1c63181ec207964736f6c63430008120033",
									".code": [
										{
											"begin": 35,
											"end": 187,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 35,
											"end": 187,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35,
											"end": 187,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 187,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x68e8208b8f195d08b066a0f31475b4d94073d1f6e36556ea7822f0875cba4fc7\",\"urls\":[\"bzz-raw://6b1a14887d76d1fbb306c7b1d019ca42cf64b5a6fd05a1f1be57557e5db40ff6\",\"dweb:/ipfs/Qmcs4q33TSkM2XETvRoq5vLXCFeXVBw3mbBxGz2rtpY6XC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SafeMath.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"MyContract": [
							44
						],
						"SafeMath": [
							26
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "SafeMath",
							"nameLocation": "43:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "126:58:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "133:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "137:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "137:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "133:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "133:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "156:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "161:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "156:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "149:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "149:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "149:14:0"
											},
											{
												"expression": {
													"id": 22,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "177:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 23,
												"nodeType": "Return",
												"src": "170:8:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "66:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "78:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "70:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "89:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "81:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "123:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:11:0"
									},
									"scope": 26,
									"src": "57:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 45,
							"src": "35:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "MyContract",
							"nameLocation": "200:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 29,
									"libraryName": {
										"id": 27,
										"name": "SafeMath",
										"nameLocations": [
											"224:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 26,
										"src": "224:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "218:27:0",
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "286:61:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "number",
														"nameLocation": "305:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "297:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 32,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"hexValue": "31",
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "314:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "297:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "337:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 36,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "333:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "326:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "326:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "326:13:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "266:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:0"
									},
									"scope": 44,
									"src": "257:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 45,
							"src": "191:159:0",
							"usedErrors": []
						}
					],
					"src": "0:352:0"
				},
				"id": 0
			}
		}
	}
}